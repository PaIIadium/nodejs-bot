'use strict';

process.env['NTBA_FIX_319'] = 1;

const Bot = require('node-telegram-bot-api');
const { exec } = require('child_process');

const bot = new Bot('724668528:AAGugqpjdQzAHXTHfrdm0W3Cqz7VgyJXBn0', { polling: true });

const sendMessage = bot.sendMessage.bind(bot);

function escapeShellArg(match) {
  const res =	match.input.split('\n').join(' ').slice(4);
  return `'${res.replace(/'/g, '\'\\\'\'')}'`;
}

function rand(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

const num = {
  '=>': rand(5, 10),
  'for': rand(5, 10),
  'function': rand(5, 10),
  'return': rand(5, 10),
  'class': rand(5, 10),
  'prototype': rand(5, 10),
  'console': rand(20, 40),
  'while': rand(5, 10),
  'log': rand(5, 10),
  'set': rand(5, 10),
  '.': rand(5, 10),
  'use strict': rand(5, 10)
};

const stick = {
  –≥–∞–ª—Å—Ç—É–∫: 'CAADAgADRAADqEwxBiTzDRtGUkCjAg',
  —à–∞–ø–∫–∞: 'CAADAgADRgADqEwxBj8KrFytDSVwAg',
  —Å—Ç–∞–Ω–¥–∞—Ä—Ç: 'CAADAgADRwADqEwxBgQ7SDyImeX6Ag',
  –∑–¥—Ä–∞—Å—Ç–µ: 'CAADAgADSAADqEwxBrzUqwV-Ukl-Ag',
  –≤–∫—É—Å–Ω—è—à–∫–∏: 'CAADAgADSQADqEwxBhCOzsP6pMr1Ag',
  —Ñ–ª–∞–≥: 'CAADAgADSgADqEwxBhHPQIpIVyVwAg',
  –ø—Ä–æ—Ç–∏–≤–æ–≥–∞–∑: 'CAADAgADSwADqEwxBmodgHsXopf-Ag',
  —Ä—É–∫–∞: 'CAADAgADTAADqEwxBmVswKMjAVhqAg',
  –º–∞—Å–∫–∞: 'CAADAgADTQADqEwxBjVMC41KQsnBAg',
  –æ–±–æ—Ä–æ—Ç: 'CAADAgADTgADqEwxBqfcJ317oGgMAg',
  —É–≥–æ–º–æ–Ω–∏—Å—å: 'CAADAgADLQADG1o7GKSmXmJ3hiSdAg',
  –≤–≤–µ—Ä—Ö: 'CAADAgADAQADIqDVF2cphv_FuAABBAI',
  —Å–æ–≤—Å–µ–º–±–æ–ª—å–Ω–æ–π: 'CAADAgADAgADIqDVF_VrkU5T4epjAg',
  –Ω–∞–¥–æ–ø–∫—É: 'CAADAgADYQAD6adoG7S2tdTg_8cTAg',
};

const arr = Object.keys(num);

function rate(code) {
  let res = 0;
  for (const str of arr) {
    const flag = code.match(new RegExp(str));
    if (flag) res += num[str];
  }
  const ice = ['üí©', 'üí©', 'üí©', 'üí©', 'üí©', 'üí©', 'üí©', 'üí©', 'üí©', 'üí©', ];
  let index = 0;
  for (let i = 0; i < res; i += 10)  ice[index++] = 'üç¶';
  return ice.join('');
}

function replying(msg, match) {
  const userId = msg.chat.id;
  sendMessage(userId, '_–¢—ã—Ä –ø—ã—Ä, –Ω–∞–≥–æ–≤–Ω–æ–∫–æ–¥–∏–ª–∏ –Ω–∞ —ç–∫—Å–ø—Ä–µ—Å–µ, —Å–¥–∞–ª–∏, –≤—ã–±—Ä–æ—Å–∏–ª–∏, –∑–∞–±—ã–ª–∏ –∏ –≤—Å–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã_', { parse_mode: 'Markdown' });
  // bot.sendSticker(msg.chat.id, stick.—Ä—É–∫–∞, { reply_to_message_id: msg.message_id })
  console.log('@' + msg.from.username + ': ' + match[1]);
  const code = escapeShellArg(match);
  exec(`timeout 1s node -e ${code}`, (error, stdout, stderr) => {
    if (error && error.code) {
      if (error.code == 124) {
        sendMessage(userId,  `_–¢—ã –ø—Ä–∞–≤–¥–∞ –¥—É–º–∞–µ—à—å, —á—Ç–æ —è –±—É–¥—É —ç—Ç–æ –≤—ã—á–∏—Å–ª—è—Ç—å,_ @${msg.from.username}_?_`, { parse_mode: 'Markdown' });
        // bot.sendSticker(msg.chat.id, stick.—Å–æ–≤—Å–µ–º–±–æ–ª—å–Ω–æ–π);
      } else {
        sendMessage(userId, `_–ß—Ç–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?.. –ß—Ç–æ_ @${msg.from.username} _–Ω–∞–ø–∏—Å–∞–ª?_\n\n` + '\`\`\`' + stderr.slice(0, stderr.indexOf('at')) + '\`\`\`', { parse_mode: 'Markdown' });
        // bot.sendSticker(msg.chat.id, stick.–∑–¥—Ä–∞—Å—Ç–µ);
      }
    } else {
      const mark = rate(code);
     	const arr = stdout.split('\n');
     	const characters = arr.join('');
     	const count = characters.length;
     	if (arr.length < 52 && count < 1001) {
     		const res = '\`\`\` ' + arr.join('   |   ').slice(0, -4) + '\`\`\`';
     		// bot.sendSticker(msg.chat.id, stick.—Ä—É–∫–∞);
     		sendMessage(userId, `_–° —É–º–∞ —Å–æ–π—Ç–∏, –æ–Ω–æ –¥–∞–∂–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å,_ @${msg.from.username}_,_ \n` + res + '\n' + '_–û—Ü–µ–Ω–∫–∞:_ ' + mark, { parse_mode: 'Markdown' });
     	}	else if (arr.length >= 52 && count < 1001) {
     			const res = '\`\`\` ' + arr.slice(0, 51).join('   |   ').slice(0, -4) + '\`\`\`';
     			// bot.sendSticker(msg.chat.id, stick.—Ä—É–∫–∞);
       			sendMessage(userId, `_–° —É–º–∞ —Å–æ–π—Ç–∏, –æ–Ω–æ –¥–∞–∂–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å,_ @${msg.from.username}_,_ \n` + res + '  _...–§–ª—É–¥_' + '\n' + '_–û—Ü–µ–Ω–∫–∞:_ ' + mark, { parse_mode: 'Markdown' });
    	}	else if (arr.length < 52 && count >= 1001) {
    			let res = '';
    			for (const value of arr) {
    				if ((res + value).length < 1001) {
    					res += value + '   |   ';
    				} else {
    					res += value.slice(999 - res.length);
    					break;
    				}
    			}
    			if (res) res = '\`\`\` ' + res.slice(0, -4) + '\`\`\`';
    			// bot.sendSticker(msg.chat.id, stick.—Ä—É–∫–∞);
    			sendMessage(userId, `_–° —É–º–∞ —Å–æ–π—Ç–∏, –æ–Ω–æ –¥–∞–∂–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å,_ @${msg.from.username}_,_ \n` + res + '  _...–§–ª—É–¥_', { parse_mode: 'Markdown' });
    	}	else if (arr.length >= 52 && count >= 1001) {
    			const sliceArr = arr.slice(0, 51);
    			let res = '';
    			if (sliceArr.join('').length > 1001) {
    				for (const value of sliceArr) {
    					if ((res + value).length < 1001) {
    						res += value + '   |   ';
    					} else {
    						res += value.slice(999 - res.length);
    						break;
    					}
    				}
    			} else {
    				res = sliceArr.join('   |   ');
    			}
    			res = '\`\`\` ' + res.slice(0, -4) + '\`\`\`';
    			// bot.sendSticker(msg.chat.id, stick.—Ä—É–∫–∞);
    			sendMessage(userId, `_–° —É–º–∞ —Å–æ–π—Ç–∏, –æ–Ω–æ –¥–∞–∂–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å,_ @${msg.from.username}_,_ \n` + res + '  _...–§–ª—É–¥_', { parse_mode: 'Markdown' });
    	}
    }
  });
}

function sendShems(msg, match) {
  const res = match.input.split('\n').join('; ');
  if (res.match(/—ç–∫–∑|—Å–µ—Å—Å–∏|–∑–∞—á[—ë–µ]—Ç/i)) {
    bot.sendSticker(msg.chat.id, stick.—Å—Ç–∞–Ω–¥–∞—Ä—Ç, { reply_to_message_id: msg.message_id });
  } else if (res.match(/–¥–æ–ø–∫/i)) {
    bot.sendSticker(msg.chat.id, stick.–∑–¥—Ä–∞—Å—Ç–µ, { reply_to_message_id: msg.message_id });
  } else if (res.match(/—à–µ–º—Å|–¢[—ñ–∏]–º–∞|–º–µ—Ç–∞—Ä—Ö|—Ç[—ñ–∏]–º—É—Ä/i)) {
    bot.sendSticker(msg.chat.id, stick.—à–∞–ø–∫–∞, { reply_to_message_id: msg.message_id });
  } else if (res.match(/(–¥–∂—Å|javascript|–ø—Ä–æ–≥–∞|js) (–¥–µ—Ä—å–º–æ|–≥–æ–≤–Ω–æ|–ª–∞–π–Ω–æ|—Ö–µ—Ä–Ω—è)/i)) {
    bot.sendSticker(msg.chat.id, stick.—É–≥–æ–º–æ–Ω–∏—Å—å, { reply_to_message_id: msg.message_id });
  } else if (res.match(/–∫[—ñ–∏]—Ç–∞|–∫–æ–º–º—É–Ω[—ñ–∏]|–∫–æ–º—É–Ω[—ñ–∏]/i)) {
    bot.sendSticker(msg.chat.id, stick.—Ñ–ª–∞–≥, { reply_to_message_id: msg.message_id });
  } else if (res.match(/–∫–æ–¥|–¥–∂—Å|js|javascript/i)) {
    bot.sendSticker(msg.chat.id, stick.–æ–±–æ—Ä–æ—Ç, { reply_to_message_id: msg.message_id });
  } else if (res.match(/–æ–ø[—ñ–∏]–ª|–±—É—Ö–ª|–∞–ª–∫–æ–≥–æ–ª|–∫–æ–≤–∞–ª—å—Å—å–∫|–ø–∞—Ä–æ–≤–æ–∑|—ñ–ª–ª|–ø–∏–≤|–ø[—ñ–∏]–Ω–≥–≤[—ñ–∏]–Ω/i)) {
    bot.sendMessage(msg.chat.id, '@kowalski0805');
  } else if (res.match(/–º–∞—á–µ–Ω–¥–æ|–Ω[—ñ–∏]–∫[—ñ–∏]—Ç/i)) {
    bot.sendMessage(msg.chat.id, '@kowalski0805');
  }
}

bot.onText(/node (.+)/, replying);

bot.onText(/(.+)/, sendShems);
